epics:
  - title: VS Code拡張でYAML形式ストーリーのスニペット
    description: |
      このエピックは、VS Code拡張としてYAML形式ストーリーのスニペットを提供し、ユーザーがYAML形式でストーリーを簡単に作成できるようにすることを目的とする。
    stories:
      - title: YAMLスニペットの提供
        as: ユーザー
        i want: VS CodeのYAMLエディタで各種要素（エピック、ストーリー、タスク、サブタスク）のスニペットを利用したい
        so that: 迅速にYAML形式の構造化ストーリーを作成できるように
        status: ToDo
        acceptance criteria:
          - ユーザーはYAMLファイルの編集中にスニペット候補を呼び出せる（例 Ctrl + Space による補完）
          - 各スニペットは以下の種類に対応している
            - エピック
            - ストーリー
            - タスク
            - サブタスク
          - スニペットはTabキーでフィールド間を移動できるように設定されている
          - スニペット定義は `YAML` 言語に対して有効である
          - 拡張機能のREADMEに使用方法が記載されている

  - title: VS Code拡張でのYAML形式ストーリーのプレビュー
    description: |
      YAML形式のストーリーをVS Code上で視覚的にプレビュー・編集する機能。
    stories:
      - title: テーブル形式プレビュー
        as: ユーザー
        i want: VS CodeのWebView上でYAML形式ストーリーをテーブル形式でプレビューしたい
        so that: ストーリーの構造を表形式で確認できるように
        status: ToDo
        acceptance criteria:
          - ユーザーはVS CodeのWebView上でYAML形式ストーリーのテーブル形式プレビューを確認できる
          - テーブルにはエピック、ストーリー、タスクの情報が含まれる
          - テーブルの列は Type(Epic,Story,Taskのいずれか)、title, status, points を表示する
          - 各行はストーリーのタイトルとステータスを表示する
          - ２カラム表示で左にテーブル、右にストーリーの詳細を表示する（詳細はストーリーをクリック時に表示）
          - 無効なYAML形式ストーリーの場合、エラーメッセージが表示される
          - プレビューは有効なYAML形式ストーリーのみ更新される
          - プレビューは編集内容をリアルタイムで反映する
      - title: 詳細表示
        as: ユーザー
        i want: VS CodeのWebView上でストーリーをクリックして詳細を表示したい
        so that: YAML形式ストーリーを直接参照することなく詳細を確認できるように
        status: ToDo
        acceptance criteria:
          - ユーザーはVS CodeのWebView上でストーリーをクリックして詳細を表示できる
          - 詳細には説明、ステータス、ポイントなどが含まれる
          - ポップアップまたは展開セクションは簡単に閉じられる
          - テーブル表示の場合、詳細は右側のカラムに表示される
          - ホワイトボード風表示の場合、詳細はポップアップで表示される
      - title: 新規アイテムの追加
        as: ユーザー
        i want: VS CodeのWebView上で新しいエピック、ストーリー、タスクを追加したい
        so that: YAML形式ストーリーを直接編集することなく、新しいアイテムを追加できるように
        status: ToDo
        acceptance criteria:
          - ユーザーはVS CodeのWebView上で新しいエピック、ストーリー、タスクを追加できる
          - 新しいアイテムはプレビューに即時に表示される
          - YAML形式ストーリーは新しいアイテムを反映するように更新される
      - title: アイテムの編集
        as: ユーザー
        i want: VS CodeのWebView上でエピック、ストーリー、タスクを編集したい
        so that: YAML形式ストーリーを直接編集することなく、素早に変更できるように
        status: ToDo
        acceptance criteria:
          - ユーザーはVS CodeのWebView上でエピック、ストーリー、タスクを編集できる
          - 編集内容はUIとYAML形式ストーリーの両方に反映される
      - title: アイテムの削除
        as: ユーザー
        i want: VS CodeのWebView上でエピック、ストーリー、タスクを削除したい
        so that: 不要なコンテンツを視覚的に整理できるように
        status: ToDo
        acceptance criteria:
          - ユーザーはVS CodeのWebView上でエピック、ストーリー、タスクを削除できる
          - 削除されたアイテムはUIとYAML形式ストーリーから消える
      - title: フィルタリング
        as: ユーザー
        i want: VS CodeのWebView上でストーリーをスプリントやステータスでフィルタリングしたい
        so that: 関心のあるストーリーだけを表示できるように
        status: ToDo
        acceptance criteria:
          - ユーザーはVS CodeのWebView上でスプリントでストーリーをフィルタリングできる
          - ユーザーはVS CodeのWebView上でステータス（例：To Do、In Progress）でストーリーをフィルタリングできる
          - フィルタリングされたストーリーのみが表示される
      - title: ドラッグ＆ドロップで並べ替え
        as: ユーザー
        i want: VS CodeのWebView上でストーリーの順序をドラッグ＆ドロップで並べ替えたい
        so that: YAML形式ストーリーを直接編集することなく、視覚的に変更できるように
        status: ToDo
        acceptance criteria:
          - ユーザーはVS CodeのWebView上でストーリーをドラッグ＆ドロップで並べ替えできる
          - 並べ替えた順序はYAML形式ストーリーに反映される

  - title: ストーリーのテーブル表示改善
    description: |
      テーブル表示の情報密度を向上させるため、Epic列を廃止し、代わりにType列（Epic, Story, Task）を導入する。
      親子関係はインデントやアイコンで表現する。
    stories:
      - title: Epic列を廃止しType列を導入して情報密度を向上させる
        as: ユーザー
        i want: Epic列をなくし、代わりにType列を持つテーブルでストーリー一覧を確認したい
        so that: 表示領域の圧迫を解消し、情報の密度を上げて一覧性を高めるため
        status: ToDo
        acceptance criteria:
          - テーブルのデータ構造が変更され、Epicも行データとして含まれる
          - UIに「Type」列が追加され、「Epic」「Story」「Task」の種別が表示される
          - Epic、Story、Taskの親子関係が視覚的にわかるように、インデントやアイコンで階層が表現される